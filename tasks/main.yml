---
#ansible-role-silk
#Copyright 2020 Carnegie Mellon University.
#NO WARRANTY. THIS CARNEGIE MELLON UNIVERSITY AND SOFTWARE ENGINEERING INSTITUTE MATERIAL IS FURNISHED ON AN "AS-IS" BASIS. CARNEGIE MELLON UNIVERSITY MAKES NO WARRANTIES OF ANY KIND, EITHER EXPRESSED OR IMPLIED, AS TO ANY MATTER INCLUDING, BUT NOT LIMITED TO, WARRANTY OF FITNESS FOR PURPOSE OR MERCHANTABILITY, EXCLUSIVITY, OR RESULTS OBTAINED FROM USE OF THE MATERIAL. CARNEGIE MELLON UNIVERSITY DOES NOT MAKE ANY WARRANTY OF ANY KIND WITH RESPECT TO FREEDOM FROM PATENT, TRADEMARK, OR COPYRIGHT INFRINGEMENT.
#Released under a MIT (SEI)-style license, please see license.txt or contact permission@sei.cmu.edu for full terms.
#[DISTRIBUTION STATEMENT A] This material has been approved for public release and unlimited distribution.  Please see Copyright notice for non-US Government use and distribution.
#CERTÂ® is registered in the U.S. Patent and Trademark Office by Carnegie Mellon University.
#This Software includes and/or makes use of the following Third-Party Software subject to its own license:
#1. ansible (https://github.com/ansible/ansible/tree/devel/licenses) Copyright 2019 Red Hat, Inc.
#2. molecule (https://github.com/ansible-community/molecule/blob/master/LICENSE) Copyright 2018 Red Hat, Inc.
#3. testinfra (https://github.com/philpep/testinfra/blob/master/LICENSE) Copyright 2020 Philippe Pepiot.
#DM20-0487
# tasks file for silk
- name: check for silk installation
  shell: "LD_LIBRARY_PATH=/usr/local/lib:$LD_LIBRARY_PATH PKG_CONFIG_PATH=$PKG_CONFIG_PATH:/usr/local/lib/pkgconfig /usr/local/bin/silk_config --silk-version"
  changed_when: false
  register: installed_silk_version
  failed_when: installed_silk_version is failed and not '/usr/local/bin/silk_config' in installed_silk_version.stderr

- when: installed_silk_version.stdout != silk_version
  block:
    - name: Run ldconfig
      command: ldconfig

    - name: download silk...
      get_url:
        url: '{{ silk_url }}'
        dest: /tmp/{{ silk_tgz }}
        mode: 0644
        checksum: '{{ silk_checksum }}'
        timeout: '{{ silk_timeout }}'

    - name: unarchive silk....
      unarchive:
        remote_src: yes
        dest: '/tmp'
        src: /tmp/{{ silk_tgz }}
        creates: '/tmp/{{ silk_name }}'

    - name: configure silk
      command: "./configure --with-libfixbuf=/usr/local/lib/pkgconfig --with-python --enable-ipv6 --enable-data-rootdir=/data/"
      args:
        chdir: "/tmp/{{ silk_name }}"

    - name: Build the default target
      make:
        chdir: "/tmp/{{ silk_name }}"

    - name: Run Install target
      make:
        chdir: "/tmp/{{ silk_name }}"
        target: install

    - name: Run ldconfig
      command: ldconfig

  always:
    - name: cleanup tar...
      file:
        path: /tmp/{{ silk_tgz }}
        state: absent
    - name: cleanup unpacked...
      file:
        path: /tmp/{{ silk_name }}
        state: absent
